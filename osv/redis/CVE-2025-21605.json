{
  "modified": "2025-04-24T09:13:31Z",
  "published": "2025-04-23T13:50:02Z",
  "schema_version": "1.5.0",
  "id": "CVE-2025-21605",
  "aliases": [
    "GHSA-r67f-p999-2gff"
  ],
  "details": "### Summary\r\nAn unauthenticated client can cause unlimited growth of output buffers, until the server runs out of memory or is killed.\r\n\r\n### Details\r\nBy default, the Redis configuration does not limit the output buffer of normal clients (see client-output-buffer-limit). Therefore, the output buffer can grow unlimitedly over time. As a result, the service is exhausted and the memory is unavailable.\r\n\r\nWhen password authentication is enabled on the Redis server, but no password is provided, the client can still cause the output buffer to grow from \"NOAUTH\" responses until the system will run out of memory.\r\n\r\nThe problem exists in Redis 2.6 or newer.\r\n\r\n### Workarounds\r\nAn additional workaround to mitigate this problem without patching the redis-server executable is to block access to prevent unauthenticated users from connecting to Redis. This can be done in different ways:\r\n\r\nUsing network access control tools like firewalls, iptables, security groups, etc.\r\nEnabling TLS and requiring users to authenticate using client side certificates.\r\n\r\n### Credit\r\nThe problem was reported by Tiezhen Zhang(zhangtiezhen@huawei.com) and Hanyang Jin(jinhanyang@huawei.com).\r\n",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "redis",
        "purl": "pkg:dhi/redis"
      },
      "database_specific": {
        "range_status": "error parsing fixed versions: error sanitizing version: invalid version: TBD.0",
        "source_ecosystem": "",
        "source_package": "redis-server"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/redis/redis/security/advisories/GHSA-r67f-p999-2gff"
    }
  ]
}