{
  "modified": "2022-02-16T11:20:42Z",
  "published": "2022-02-09T08:29:43Z",
  "schema_version": "1.5.0",
  "id": "CVE-2022-23628",
  "aliases": [
    "GHSA-hcw3-j74m-qc58"
  ],
  "details": "### Impact\r\n\r\nUnder certain conditions, pretty-printing an AST that contains synthetic nodes could change the logic of some statements by reordering array literals. Example of policies impacted are those that parse and compare web paths, see the example below.\r\n\r\n**All of these** three conditions have to be met to create an adverse effect:\r\n\r\n1. An AST of Rego had to be **created programmatically** such that it ends up containing terms without a location (such as wildcard variables).\r\n2. The AST had to be **pretty-printed** using the `github.com/open-policy-agent/opa/format` package.\r\n3. The result of the pretty-printing had to be **parsed and evaluated again** via an OPA instance using the bundles, or the Golang packages.\r\n\r\nIf any of these three conditions are not met, you are not affected.\r\n\r\nNotably, all three would be true if using **optimized bundles**, i.e. bundles created with `opa build -O=1` or higher.\r\nIn that case, the optimizer would fulfil condition (1.), the result of that would be pretty-printed when writing the bundle to disk, fulfilling (2.). When the bundle was then used, we'd satisfy (3.).\r\n\r\n#### Example\r\nFor example, the process outlined above could turn \r\nthis rule\r\n```rego\r\nhello {\r\n\t[\"foo\", _] = split(input.resource, \"/\")\r\n}\r\n```\r\n\r\ninto\r\n```rego\r\nhello {\r\n\t[_, \"foo\"] = split(input.resource, \"/\")\r\n}\r\n```\r\n\r\nwith an input of\r\n```rego\r\n{\r\n    \"resource\": \"foo/bar\"\r\n}\r\n```\r\n\r\nthe result would change from\r\n```rego\r\n{\r\n    \"hello\": true\r\n}\r\n```\r\nto (no default value of hello)\r\n```rego\r\n{}\r\n```\r\n\r\nThe severity was determined to be *moderate* because the conditions are quite particular. Please note that its only the OPA bundle build process thats affected. An OPA sidecar of version 0.36.0 with an optimized bundle built by OPA 0.32.1 would not face this bug.\r\n\r\n### Patches\r\n\r\nFixed in version 0.37.2.\r\n\r\n### Workarounds\r\n\r\n- Disabling optimization when creating bundles.\r\n\r\n### References\r\n\r\n- Introduced in https://github.com/open-policy-agent/opa/pull/3851\r\n- Backported for the 0.33.1 patch release: https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717\r\n- Fixed by https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239 and https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* Open an issue in [Community Discussions](https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego)\r\n* Ask in Slack: https://slack.openpolicyagent.org/",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "open-policy-agent",
        "purl": "pkg:dhi/open-policy-agent"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.33.1"
            },
            {
              "fixed": "0.37.2"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "go",
        "source_package": "github.com/open-policy-agent/opa"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58"
    }
  ]
}