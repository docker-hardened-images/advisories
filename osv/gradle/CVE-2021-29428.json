{
  "modified": "2021-04-10T00:31:38Z",
  "published": "2021-04-10T00:31:38Z",
  "schema_version": "1.5.0",
  "id": "CVE-2021-29428",
  "aliases": [
    "GHSA-89qm-pxvm-p336"
  ],
  "details": "### Impact\r\n\r\nOn Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. \r\n\r\nThis vulnerability impacted builds using [precompiled script plugins written in Kotlin DSL](https://docs.gradle.org/current/userguide/custom_plugins.html#sec:precompiled_plugins) and tests for Gradle plugins written using [`ProjectBuilder`](https://docs.gradle.org/current/javadoc/org/gradle/testfixtures/ProjectBuilder.html) or [TestKit](https://docs.gradle.org/current/userguide/test_kit.html).\r\n\r\nIf you are on Windows or modern versions of macOS, you are not vulnerable.\r\nIf you are on a Unix-like operating system with the [\"sticky\" bit](https://en.wikipedia.org/wiki/Sticky_bit) set on your system temporary directory, you are not vulnerable.\r\n\r\n#### Precompiled script plugins \r\n\r\nWhen compiling precompiled script plugins written in Kotlin DSL, Gradle uses a temporary directory in the system temporary directory to execute a build-like process. \r\n\r\nA local privilege escalation can occur due to a race condition in the creation of this temporary directory. If an attacker is able to write files into the directory created by Gradle, the attacker can execute commands at the same privilege level as the build. \r\n\r\nIf you do not use precompiled script plugins, you are not vulnerable.\r\n\r\n#### `ProjectBuilder` API in tests\r\n\r\n`ProjectBuilder` is most commonly used by plugin authors to write unit tests. With this API, if you do not [specify a project directory](https://docs.gradle.org/current/javadoc/org/gradle/testfixtures/ProjectBuilder.html#withProjectDir-java.io.File-), Gradle will create one for you in a temporary directory.\r\n\r\nA local privilege escalation can occur due to a race condition in the creation of this temporary directory. If an attacker is able to write files into the project directory created for the test, the attacker can execute commands at the same privilege level as the build. \r\n\r\nIf you do not use `ProjectBuilder` or you always specify a project directory, you are not vulnerable.\r\n\r\n#### Gradle TestKit in tests\r\n\r\nTestKit is also used by plugin authors to write integration tests. These tests execute full Gradle builds. TestKit uses a well-known path in the system temporary directory to cache some information between runs, like Gradle distributions and dependency downloads.\r\n\r\nA local privilege escalation can occur if an attacker controls the creation of this directory. If an attacker is able to write files into the directory created for TestKit, the attacker can execute commands at the same privilege level as the build. \r\n\r\nIf you do not use TestKit, you are not vulnerable.\r\n\r\n### What should you do? \r\n\r\n### Upgrade to Gradle 7.0\r\n\r\nAs of Gradle 7.0, `ProjectBuilder`, TestKit and other uses of the system temporary directory have been removed where possible. Instead of relying on the system temporary directory, Gradle now uses a combination of the Gradle User Home and project's build directory.\r\n\r\n#### Workaround for older versions\r\n\r\nOn Unix-like operating systems, ensure that the \"sticky\" bit is set. This only allows the original user (or root) to delete a file.\r\n\r\nIf you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.\r\n\r\n### References\r\n\r\nThe vulnerable code:\r\n- https://github.com/gradle/gradle/blob/ff5dc12dbf8595b01d858b1cd3c0103fcc94b419/subprojects/core/src/main/java/org/gradle/api/internal/file/DefaultTemporaryFileProvider.java#L57-L63\r\n- https://github.com/gradle/gradle/blob/d02484628233a05a2b4f4c8302bf1d79ee4faf45/subprojects/test-kit/src/main/java/org/gradle/testkit/runner/internal/DefaultGradleRunner.java#L336-L350 \r\n - https://github.com/gradle/gradle/pull/15240\r\n - https://github.com/gradle/gradle/pull/15654\r\n\r\nThese other projects experienced similar vulnerabilities:\r\n - Eclipse Jetty - https://github.com/eclipse/jetty.project/security/advisories/GHSA-g3wg-6mcf-8jj6\r\n - JUnit 4 - https://github.com/junit-team/junit4/security/advisories/GHSA-269g-pwp5-87pp\r\n - Google Guava - https://github.com/google/guava/issues/4011\r\n - Apache Ant - https://nvd.nist.gov/vuln/detail/CVE-2020-1945\r\n - JetBrains Kotlin Compiler - https://nvd.nist.gov/vuln/detail/CVE-2020-15824\r\n\r\nMore about this type of vulnerability:\r\n - [CWE-378: Creation of Temporary File With Insecure Permissions](https://cwe.mitre.org/data/definitions/378.html)\r\n - [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https://cwe.mitre.org/data/definitions/379.html)\r\n\r\n### Questions?\r\n\r\n* For security related issues, please email us at security@gradle.com.\r\n* For non-security related issues, please open an issue on [GitHub](https://github.com/gradle/gradle/issues/new/choose).\r\n\r\n",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "gradle",
        "purl": "pkg:dhi/gradle"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "7.0.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "java",
        "source_package": "Gradle"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/gradle/gradle/security/advisories/GHSA-89qm-pxvm-p336"
    }
  ]
}