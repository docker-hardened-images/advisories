{
  "modified": "2023-04-04T14:49:55Z",
  "published": "2023-04-04T14:49:55Z",
  "schema_version": "1.5.0",
  "id": "CVE-2023-27492",
  "aliases": [
    "GHSA-wpc2-2jp6-ppg2"
  ],
  "details": "### Impact\r\n\r\nDenial of service (crash).\r\n\r\n### Affected components\r\n\r\nLua filter.\r\n\r\n### Attack vector/s\r\n\r\nAttackers can send large request bodies for routes that have Lua filter enabled and trigger crashes.\r\n\r\n### Description\r\n\r\nThe Lua filter can resume processing of the coroutine after we've sent a local reply due to request/response body being too large. This mitigation prevents coroutine invocation if weâ€™re doing a local reply.\r\n\r\n### Example exploit or proof-of-concept\r\n\r\n1 Configure a route that has Lua filter enabled.\r\n2 Send a request with a large body that is beyond the buffer limit.\r\n3 Have the Lua script request the request body, this will cause us to buffer the entire request body. \r\n4 The request body buffering can go over the limit here: https://sourcegraph.com/github.com/envoyproxy/envoy@991cde892ff88b7aca04adb7fc44e14f6c0ee0fe/-/blob/source/extensions/filters/http/lua/lua_filter.cc?L263\u0026subtree=true#tab=references and send the local reply, but the Lua filter is oblivious and continues the coroutine.\r\n5 The Lua script kicks off a HTTP request that points to the Lua filter.\r\n6 The Lua filter is destroyed as Envoy has completed the local reply and destroyed the related objects.\r\n7 The HTTP request that the Lua script kicked off in step 5 has a response, and calls the Lua filter. The filter will already be destroyed, so Envoy will segfault.\r\n\r\n### Detection\r\n\r\nGiven enough traffic of this type, Envoy would be crashing especially when the body buffered is larger.\r\n\r\n### Mitigation\r\n\r\nFor versions updated with the patch, we no longer invoke the Lua coroutine if the filter has been reset.\r\n\r\nFor older unpatched versions you can mitigate by:\r\nIf your Lua filter is buffering all requests/ responses you can guard by using the buffer filter to avoid triggering the local reply in the Lua filter.\r\n\r\n### Discoverer/credit\r\n\r\nDan Tulovsky \u003cdant@wetsnow.com\u003e\r\n",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "envoy",
        "purl": "pkg:dhi/envoy"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.22.9"
            },
            {
              "introduced": "1.23.0"
            },
            {
              "fixed": "1.23.6"
            },
            {
              "introduced": "1.24.0"
            },
            {
              "fixed": "1.24.4"
            },
            {
              "introduced": "1.25.0"
            },
            {
              "fixed": "1.25.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "envoy",
        "source_package": "Envoy"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-wpc2-2jp6-ppg2"
    }
  ]
}