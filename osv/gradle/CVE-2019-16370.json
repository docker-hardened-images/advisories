{
  "modified": "2019-10-01T14:11:48Z",
  "published": "2019-10-01T14:11:48Z",
  "schema_version": "1.5.0",
  "id": "CVE-2019-16370",
  "aliases": [
    "GHSA-mrm8-42q4-6rm7"
  ],
  "details": "We want to thank [Vladimir Sitnikov](https://github.com/vlsi) who originally reported this vulnerability to us and contributed a fix.\r\n\r\n### Impact\r\n\r\nUsers publishing to artifact servers like Maven Central are required to upload files signed with GPG/PGP and a `.asc` file containing the signature.\r\n\r\nBefore Gradle 6.0, the `signing` plugin that created these `.asc` files used a SHA1 digest, which is considered cryptographically broken and is known to be vulnerable to second-preimage attacks. Note that `.asc` file embeds its own digest and it is not related to checksum `.sha1` and `.md5` files.\r\n\r\nUsers who are concerned that their upstream artifact servers may be compromised use GPG/PGP signatures to verify that artifacts are legitimate. You can read more about this type of vulnerability at [CWE-327: Use of a Broken or Risky Cryptographic Algorithm](https://cwe.mitre.org/data/definitions/327.html).\r\n\r\n### Patches\r\n\r\nThis vulnerability has been fixed in [Gradle 6.0](https://gradle.org/releases/).\r\n\r\n### Workarounds\r\nIf you are unable to upgrade the version of Gradle you are using, you can consider doing the following: \r\n\r\n - Use [gpg executable](https://docs.gradle.org/current/userguide/signing_plugin.html#sec:using_gpg_agent) for signing, and ensure it defaults to strong digests. Gradle 5.x requires that you specify a signing key id via signing.gnupg.keyName property when using gpg executable (see https://github.com/gradle/gradle/issues/8657).\r\n - Ask your users to check multiple checksums like SHA1 and MD5 (both are required by Maven Central). Although both of these hashing algorithms are considered cryptographically broken, creating a malicious file that matches both a published SHA1 and MD5 hash has not yet been publicly proven to have occurred yet.\r\n - Publish stronger checksums like SHA256 or SHA512.\r\n\r\n### How do I check if an `.asc` file is using SHA1?\r\n\r\nYou can use gpg or pgpdump utilities to verify if a given `.asc` file is strong or not.\r\n\r\nUsing `gpg`, the following command prints \"digest algo 2\" when a SHA1 digest is used.\r\n```\r\ngpg --list-packets file.jar.asc\r\n```\r\n\r\nUsing `pgpdump`, the following command prints \"Hash alg - SHA1(hash 2)\" when a SHA1 digest is used.\r\n```\r\npgpdump file.jar.asc\r\n```\r\n\r\n### For more information\r\n\r\n* [Maven Centrals PGP signature requirements](https://central.sonatype.org/pages/working-with-pgp-signatures.html).\r\n* Apache Software Foundation recommends users [avoid SHA1 digest for PGP signatures](https://www.apache.org/dev/openpgp.html#sha1). \r\n* For security related issues, please email us at security@gradle.com.\r\n* For non-security related issues, please open an issue on [GitHub](https://github.com/gradle/gradle/issues/new/choose).\r\n",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "gradle",
        "purl": "pkg:dhi/gradle"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "6.0.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "java, android, c/c++, build tooling",
        "source_package": "Gradle"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/gradle/gradle/security/advisories/GHSA-mrm8-42q4-6rm7"
    }
  ]
}