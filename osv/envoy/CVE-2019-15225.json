{
  "modified": "2019-11-08T20:35:04Z",
  "published": "2019-11-08T20:35:04Z",
  "schema_version": "1.5.0",
  "id": "CVE-2019-15225",
  "aliases": [
    "GHSA-qj45-j25r-p2rq"
  ],
  "details": "# CVE-2019-15225\r\n\r\n## Brief description\r\nUsers of Envoy 1.11.1 and before may configure a route to match incoming path headers when using the libstdc++ regex implementation. A remote attacker may send a request with a very long URI to result in a denial of service (memory consumption).\r\n\r\n## CVSS\r\n[CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H](https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H) (7.5, High)\r\n\r\n## Affected version(s)\r\nEnvoy 1.11.1 and before. Fix will be in 1.11.2\r\n\r\n## Affected component(s)\r\nRouter\r\n\r\n## Attack vector(s)\r\nAn HTTP request with a very large URI delivered by an untrusted client.\r\n\r\n## Discover(s)/Credits\r\nSeikun Kambashi\r\n\r\n## Example exploit or proof-of-concept\r\nAn example of a crash with regex matching in a Route:\r\n\r\n1. A Route is configured to match incoming :path headers using a [RouteMatch](https://github.com/envoyproxy/envoy/blob/34532dd6d636e5b0f6cbc42e84c554a78eb34b1d/api/envoy/api/v2/route/route.proto#L318) regex “/asdf/.*” \r\n2. A client constructs a 50 KiB string longString and sends an HTTP/1.1 GET request for a path  “/asdf/{longString}”  on the wire.\r\n\r\n## Details\r\nEnvoy’s HTTP router may be configured with regular expressions for routing incoming HTTP requests based on header values. Prior to version 1.11.2 envoy utilized recursive algorithm for matching regular expressions. As a result a HTTP request with sufficiently large header may consume large amount or run out of stack memory and cause abnormal process termination. Regular expressions with the ‘*’ or ‘+’ quantifiers are particularly vulnerable and may cause abnormal process termination when matching header values 16Kb or longer.\r\n\r\nThis problem is addressed in Envoy version 1.11.2 by replacing implementation of regular expression matching with a non-recursive version.\r\n\r\n## Mitigations\r\nTo mitigate CVE-2019-15225 in Envoy prior to v1.11.2, regular expression matching in request routing must be disabled and other types of matching used instead. Instead, use Envoy prefix/suffix regex matchers where possible. In Envoy v1.11.2 and later the “safe_regex” and “safe_regex_match” should be used for specifying regular expressions instead of “regex_match”.\r\n\r\n## Detection\r\nExcessive memory consumption or frequent abnormal terminations of envoy process with segmentation fault. A stack trace with a large number of frames in the std::regex methods can provide a strong signal.\r\n\r\n## References\r\n* CVE: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-15225\r\n* Initial GitHub Issue: https://github.com/envoyproxy/envoy/issues/7728\r\n",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "envoy",
        "purl": "pkg:dhi/envoy"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.11.2"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "",
        "source_package": ""
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-qj45-j25r-p2rq"
    }
  ]
}