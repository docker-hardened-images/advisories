{
  "modified": "2021-10-04T11:32:12Z",
  "published": "2021-10-04T11:32:12Z",
  "schema_version": "1.5.0",
  "id": "CVE-2021-32675",
  "aliases": [
    "GHSA-f6pw-v9gw-v64p"
  ],
  "details": "### Impact\r\nWhen parsing an incoming Redis Standard Protocol (RESP) request, Redis allocates memory according to user-specified values which determine the number of elements (in the multi-bulk header) and size of each element (in the bulk header). An attacker delivering specially crafted requests over multiple connections can cause the server to allocate significant amount of memory.\r\n\r\nBecause the same parsing mechanism is used to handle authentication requests, this vulnerability can also be exploited by unauthenticated users.\r\n\r\n### Patches\r\nThe problem is fixed in Redis versions 6.2.6, 6.0.16 and 5.0.14.\r\n\r\n### Workarounds\r\nAn additional workaround to mitigate this problem without patching the `redis-server` executable is to block access to prevent unauthenticated users from connecting to Redis. This can be done in different ways:\r\n\r\n* Using network access control tools like firewalls, iptables, security groups, etc.\r\n* Enabling TLS and requiring users to authenticate using client side certificates.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [the Redis repository](https://github.com/redis/redis)\r\n* Email us at redis@redis.io\r\n",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "redis",
        "purl": "pkg:dhi/redis"
      },
      "database_specific": {
        "range_status": "error parsing vulnerable versions: error sanitizing version: invalid version: All.0",
        "source_ecosystem": "redis",
        "source_package": ""
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/redis/redis/security/advisories/GHSA-f6pw-v9gw-v64p"
    }
  ]
}