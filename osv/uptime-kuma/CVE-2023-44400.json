{
  "modified": "2025-09-30T22:37:30Z",
  "published": "2023-10-09T12:49:48Z",
  "schema_version": "1.5.0",
  "id": "CVE-2023-44400",
  "aliases": [
    "GHSA-g9v2-wqcj-j99g"
  ],
  "details": "# Summary\r\n\r\nAttackers with access to a users' device can gain persistent account access.\r\nThis is caused by missing verification of Session Tokens after password changes and/or elapsed inactivity-periods.\r\n\r\n# Details\r\n\r\n`uptime-kuma` sets JWT tokens for users after successful authentication.\r\n\r\nThese tokens have the following design flaws:\r\n- After successful login, a JWT token and it is stored in `sessionStorage` or `localStorage`. \r\n  Which of the two is decided based on the `Remember Me` button. \r\n  The users' token is valid without any time limitation, even after long periods of inactivity. \r\n  This increases the risk of session hijacking if, for example, a user forgets to log off and leaves the PC.\r\n- sessions are only deleted on the client side after a user loggs out, meaning a local attacker could reuse said token with deep system access over the browser\r\n- If a user changes a password\r\n  - any previously logged in clients are not logged out\r\n  - previously issued tokens remained valid forever\r\n\r\nThese flaws allow user cookies to remain valid even after changing passwords or being inactive, posing a high security risk.\r\n\r\n# POC\r\n### Password resets not deactivating cookies\r\n- Log in.\r\n- Note the user cookie.\r\n- Change your password.\r\n- Attempt to log in again with the same cookie.\r\n- The cookie remains valid despite the password change.\r\n\r\n### Inactivity not deactivating sessions\r\n In testing, even after a period of over a day of inactivity, the session was still valid\r\n\r\n# Impact\r\n\r\nAnother person with local access to the device could take over the session permanently, even after hours of previous inactivity or a password change.\r\nSuch activity would not be obvious to the user (see https://github.com/louislam/uptime-kuma/issues/3481 if you want to help with this).\r\n\r\nWith this gained account access, an attacker can cause:\r\n\r\n## confidentially loss\r\n- monitors (including private ones not shared on public status pages)\r\n- notification providers \r\n- settings like `api-keys` (only used for accessing `/metrics`)\r\n- settings like secrets like the `Steam API Key`\r\n- maintenance periods\r\n\r\n## availability loss \r\n\r\n- by creating a lot of monitors and setting the retention policy very high leading to degraded database performance or out of storage\r\n- by creating a lot of `HTTP(s) - Browser Engine (Chrome/Chromium) (Beta)` leading to RAM exhaustion\r\n\r\n## integrity loss\r\n- by the attacker deleting a monitor\r\n- by the attacker deleting a monitor's history\r\n- by the atacker changing the meaning of a monitor (changing where it points)\r\n\r\n## scope creep\r\nIf operated in some restricted network, access to monitors may provide the ability to change the scope of the attack to a different piece of infrastructure, for example via SQL commands to a database server.\r\nWe have not classified this as `changed scope` because credentials stored in the application for accessing other systems are existing valid paths across the trust boundary, and the user should be aware of that.",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "uptime-kuma",
        "purl": "pkg:dhi/uptime-kuma"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.23.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "docker",
        "source_package": "louislam/uptime-kuma"
      }
    },
    {
      "package": {
        "ecosystem": "DHI",
        "name": "uptime-kuma",
        "purl": "pkg:dhi/uptime-kuma"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.23.3"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "node.js",
        "source_package": "louislam/uptime-kuma"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g"
    }
  ],
  "withdrawn": "2025-09-30T22:37:30Z",
  "withdrawal_reason": "WITHDRAWN",
  "summary": "Withdrawn because the dhi/uptime-kuma image now uses an npm PURL in the SBOM."
}
