{
  "modified": "2021-07-20T21:37:23Z",
  "published": "2021-07-20T21:37:23Z",
  "schema_version": "1.5.0",
  "id": "CVE-2021-32751",
  "aliases": [
    "GHSA-6j2p-252f-7mw8"
  ],
  "details": "### Impact\r\n\r\n[Start scripts generated by the `application` plugin](https://docs.gradle.org/current/userguide/application_plugin.html#header) and the [`gradlew` script](https://docs.gradle.org/current/userguide/gradle_wrapper.html#header) are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script.\r\n\r\nThis may impact you if you use `gradlew` on Unix-like systems or use the scripts generated by Gradle in your application on Unix-like systems.\r\n\r\nFor `gradlew`, commands can be included in either `JAVA_OPTS` or `GRADLE_OPTS`.\r\nFor start scripts, commands can be included in either `JAVA_OPTS` or `\u003cAPP_NAME\u003e_OPTS`.\r\n\r\nFor example, if a command is added to `JAVA_OPTS` and the user runs a Gradle build:\r\n```\r\n$ export JAVA_OPTS='-Xmx512m $(touch foo)' \r\n$ ./gradlew build\r\n```\r\n\r\nThis will execute `touch foo`, but any command will work here. When determining the command-line for the Java process that is started by the script, any commands found in these environment variables will be executed as the user running the script.\r\n\r\nFor this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. \r\n\r\nThis vulnerability was found during a security audit. We do not know of any exploits based on this vulnerability.\r\n\r\n### Patches\r\n\r\nThis issue has been patched in Gradle 7.2 by updating our start script template.\r\n\r\n### Workarounds\r\n\r\n#### CI/CD systems using the Gradle build tool\r\n\r\nYou are not vulnerable if untrusted users are unable to change environment variables for the user that executes `gradlew`.\r\n\r\nIf you are unable to upgrade to Gradle 7.2, you can generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. \r\n\r\n#### Applications using start scripts generated by Gradle\r\n\r\nYou are not vulnerable if untrusted users are unable to change environment variables for the user that executes the start script.\r\n\r\nIf you are unsure, the vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line.\r\n\r\nIf the application is simple enough, you may be able to avoid the use of the start scripts by running the application directly with Java command.\r\n\r\n### References\r\n- [Eval command and security issues](https://mywiki.wooledge.org/BashFAQ/048)\r\n- [The perils of Bash 'eval'](https://medium.com/dot-debug/the-perils-of-bash-eval-cc5f9e309cae)\r\n\r\n### Questions?\r\n* For security related issues, please email us at security@gradle.com.\r\n* For non-security related issues, please open an issue on [GitHub](https://github.com/gradle/gradle/issues/new/choose).",
  "affected": [
    {
      "package": {
        "ecosystem": "DHI",
        "name": "gradle",
        "purl": "pkg:dhi/gradle"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "7.2.0"
            }
          ]
        }
      ],
      "database_specific": {
        "source_ecosystem": "java",
        "source_package": "Gradle"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/gradle/gradle/security/advisories/GHSA-6j2p-252f-7mw8"
    }
  ]
}